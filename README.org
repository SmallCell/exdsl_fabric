#+STARTUP: showall hidestars

#+OPTIONS: author:nil creator:nil
#+OPTIONS: toc:nil

#+TAGS: DOCS(d) CODING(c) TESTING(t) PLANING(p)

#+TITLE: CWMP Protocol overview page


* Qwerview
  Some (60/40) people capable to programm their stuff and not patient
  enough to learn programming. Every people is domain expert one way
  or another but only those in 'Some can delegate thair routine to
  machine and become meta expert.

  This programm is attemt to bring meta tools to the Domain Expert.


* Use case: Creating new project
** Bootstrap application
   (Assuming Erlang/Elixir installed on target system.)

   Chose project name like - `pet_automation.
   
*** Create empty project
     : mix new pet_automation
     
*** Add dependenties to `fabric engine
#+BEGIN_SRC elixir
  defp deps do
      [{ :exdsl_fabric, "0.1", git: "https://github.com/SmallCell/exdsl_fabric.git" }]
  end
#+END_SRC

   : mix deps.get

*** Add minilanguages you intend to use
#+BEGIN_SRC elixir
    defp deps do
        [
         { :exdsl_fabric, "0.1", git: "https://github.com/SmallCell/exdsl_fabric.git" },
         { :exdsl_shell, "0.1", git: "https://github.com/SmallCell/exdsl_shell.git" },
         { :exdsl_nets, "0.1", git: "https://github.com/SmallCell/exdsl_nets.git" },
         { :exdsl_fsm, "0.1", git: "https://github.com/SmallCell/exdsl_fsm.git" },
        ]
    end
#+END_SRC


** Create new script
   
   Add new script `install_db which use `shell mini language
   : mix dsl.new install_db shell


* Background

** Minilanguages
   
   Borrowers
   | Mini   | Desc                   | 
   | expect | expect TCL extention   |
   | shell  | based on python Fabric |
   | FSM    | Erlang gen_fsm wrapper |
   |        |                        |
   
** Metalanguages

   | Meta    | Desc                                              | Model              |
   | monadic | Fork from https://github.com/sasa1977/monadic.git | Monadic computaion |
   | nets    | dependency network aka                            | Makefile           |
   |         |                                                   |                    |
   


